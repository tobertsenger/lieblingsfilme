[33mcommit d643cd410613f498b1ae4dab4c9bbe616489c8e5[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m
Author: Arthur Schubert <artur.schubert.lit@gmail.com>
Date:   Wed Aug 13 22:51:20 2025 +0200

    Add update (PUT) functionality to movies API

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..0bd0392[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m# Dependencies[m
[32m+[m[32m/node_modules[m
[32m+[m[32m/client/node_modules[m
[32m+[m
[32m+[m[32m# Environment variables[m
[32m+[m[32m.env[m
[32m+[m[32m/server/.env[m
[32m+[m[32m/client/.env[m
[32m+[m
[32m+[m[32m# Production build[m
[32m+[m[32m/client/build[m
[1mdiff --git a/client/.gitignore b/client/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..4d29575[m
[1m--- /dev/null[m
[1m+++ b/client/.gitignore[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.[m
[32m+[m
[32m+[m[32m# dependencies[m
[32m+[m[32m/node_modules[m
[32m+[m[32m/.pnp[m
[32m+[m[32m.pnp.js[m
[32m+[m
[32m+[m[32m# testing[m
[32m+[m[32m/coverage[m
[32m+[m
[32m+[m[32m# production[m
[32m+[m[32m/build[m
[32m+[m
[32m+[m[32m# misc[m
[32m+[m[32m.DS_Store[m
[32m+[m[32m.env.local[m
[32m+[m[32m.env.development.local[m
[32m+[m[32m.env.test.local[m
[32m+[m[32m.env.production.local[m
[32m+[m
[32m+[m[32mnpm-debug.log*[m
[32m+[m[32myarn-debug.log*[m
[32m+[m[32myarn-error.log*[m
[1mdiff --git a/client/README.md b/client/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..d144ae0[m
[1m--- /dev/null[m
[1m+++ b/client/README.md[m
[36m@@ -0,0 +1,98 @@[m
[32m+[m
[32m+[m[32m# Lieblingsfilme-App[m
[32m+[m
[32m+[m[32m## Projektbeschreibung und Ziele[m
[32m+[m
[32m+[m[32mDie Movies-App ist eine Fullstack-Webanwendung, mit der Nutzer ihre Lieblingsfilme verwalten k√∂nnen. Ziel des Projekts ist es, eine moderne, benutzerfreundliche Oberfl√§che mit React zu bieten, die √ºber eine REST-API mit einem Node.js/Express-Backend und einer MongoDB-Datenbank kommuniziert. Nutzer k√∂nnen Filme hinzuf√ºgen, anzeigen und l√∂schen.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## Datenmodell und API-Design[m
[32m+[m
[32m+[m[32m### Datenmodell (MongoDB/Mongoose)[m
[32m+[m
[32m+[m[32mJeder Film besteht aus folgenden Feldern:[m
[32m+[m[32m- **title** (String, erforderlich): Der Titel des Films[m
[32m+[m[32m- **year** (Number, erforderlich): Das Erscheinungsjahr[m
[32m+[m[32m- **createdAt/updatedAt** (automatisch): Zeitstempel f√ºr Erstellung und √Ñnderung[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32m{[m
[32m+[m[32m  title: String,[m
[32m+[m[32m  year: Number,[m
[32m+[m[32m  createdAt: Date,[m
[32m+[m[32m  updatedAt: Date[m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### API-Endpunkte[m
[32m+[m
[32m+[m[32m- **GET /api/movies/**[m[41m  [m
[32m+[m[32m  Gibt alle Filme als JSON zur√ºck.[m
[32m+[m
[32m+[m[32m- **POST /api/movies/add**[m[41m  [m
[32m+[m[32m  Erwartet `{ title, year }` im Body. Legt einen neuen Film an.[m
[32m+[m
[32m+[m[32m- **DELETE /api/movies/:id**[m[41m  [m
[32m+[m[32m  L√∂scht den Film mit der angegebenen ID.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## Installationsanleitung[m
[32m+[m
[32m+[m[32m### Voraussetzungen[m
[32m+[m
[32m+[m[32m- Node.js und npm installiert[m
[32m+[m[32m- MongoDB Atlas-Cluster (oder lokale MongoDB)[m
[32m+[m
[32m+[m[32m### Installation[m
[32m+[m
[32m+[m[32m1. **Backend installieren**[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   cd server[m
[32m+[m[32m   npm install[m
[32m+[m[32m   ```[m
[32m+[m[32m   Erstelle eine `.env`-Datei mit folgendem Inhalt:[m
[32m+[m[32m   ```[m
[32m+[m[32m   PORT=5001[m
[32m+[m[32m   MONGO_URI=<dein MongoDB-URI>[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m2. **Fronten